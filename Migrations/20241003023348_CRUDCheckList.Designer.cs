// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuevakWeb.Data;

#nullable disable

namespace QuevakWeb.Migrations
{
    [DbContext(typeof(QuevakWebContext))]
    [Migration("20241003023348_CRUDCheckList")]
    partial class CRUDCheckList
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuevakWeb.Models.AreaModel", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArea"), 1L, 1);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArea");

                    b.ToTable("AreaModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.AuxModels.CheckListAreaModel", b =>
                {
                    b.Property<int>("IdCheckListArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCheckListArea"), 1L, 1);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<bool?>("Completada")
                        .HasColumnType("bit");

                    b.HasKey("IdCheckListArea");

                    b.HasIndex("AreaId");

                    b.HasIndex("CheckListId");

                    b.ToTable("CheckListAreaModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.AuxModels.CheckListTareaModel", b =>
                {
                    b.Property<int>("IdCheckListTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCheckListTarea"), 1L, 1);

                    b.Property<int?>("CheckListId")
                        .HasColumnType("int");

                    b.Property<bool?>("Completada")
                        .HasColumnType("bit");

                    b.Property<int?>("TareaId")
                        .HasColumnType("int");

                    b.HasKey("IdCheckListTarea");

                    b.HasIndex("CheckListId");

                    b.HasIndex("TareaId");

                    b.ToTable("CheckListTareaModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.CheckListModel", b =>
                {
                    b.Property<int>("IdCheckList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCheckList"), 1L, 1);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdCheckList");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CheckListModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.ClienteModel", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domicilio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("ClienteModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.TareaModel", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarea"), 1L, 1);

                    b.Property<string>("Aux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarea")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTarea");

                    b.ToTable("TareaModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.UsuarioModel", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("ApellidoM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLastEdit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("QuevakWeb.Models.AuxModels.CheckListAreaModel", b =>
                {
                    b.HasOne("QuevakWeb.Models.AreaModel", "Area")
                        .WithMany("CheckListAreas")
                        .HasForeignKey("AreaId");

                    b.HasOne("QuevakWeb.Models.CheckListModel", "CheckList")
                        .WithMany("CheckListAreas")
                        .HasForeignKey("CheckListId");

                    b.Navigation("Area");

                    b.Navigation("CheckList");
                });

            modelBuilder.Entity("QuevakWeb.Models.AuxModels.CheckListTareaModel", b =>
                {
                    b.HasOne("QuevakWeb.Models.CheckListModel", "CheckList")
                        .WithMany("CheckListTareas")
                        .HasForeignKey("CheckListId");

                    b.HasOne("QuevakWeb.Models.TareaModel", "Tarea")
                        .WithMany("CheckListTareas")
                        .HasForeignKey("TareaId");

                    b.Navigation("CheckList");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("QuevakWeb.Models.CheckListModel", b =>
                {
                    b.HasOne("QuevakWeb.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("QuevakWeb.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Cliente");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("QuevakWeb.Models.AreaModel", b =>
                {
                    b.Navigation("CheckListAreas");
                });

            modelBuilder.Entity("QuevakWeb.Models.CheckListModel", b =>
                {
                    b.Navigation("CheckListAreas");

                    b.Navigation("CheckListTareas");
                });

            modelBuilder.Entity("QuevakWeb.Models.TareaModel", b =>
                {
                    b.Navigation("CheckListTareas");
                });
#pragma warning restore 612, 618
        }
    }
}
